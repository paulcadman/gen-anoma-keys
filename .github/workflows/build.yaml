on:
  workflow_dispatch:

env:
  EXE_NAME: gen-anoma-keys

jobs:
  build-macos-aarch64:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        run: rustup toolchain install stable --profile minimal

      - name: build project
        run: cargo build --release

      - name: create release tarball
        run: |
          tar zcf ${{ env.EXE_NAME }}-macos-aarch64.tar.gz -C target/release ${{ env.EXE_NAME }}

      - uses: actions/upload-artifact@v4
        with:
          name: macos-aarch64-binary
          path: ${{ env.EXE_NAME }}-macos-aarch64.tar.gz
          if-no-files-found: error

  build-linux-x86_64-musl:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - run: sudo apt install musl-tools

      - name: Setup Rust
        run: |
          rustup toolchain install stable --profile minimal
          rustup target add x86_64-unknown-linux-musl

      - name: build project
        run: cargo build --release --target x86_64-unknown-linux-musl

      - name: create release tarball
        run: |
          tar zcf ${{ env.EXE_NAME }}-linux-x86_64-musl.tar.gz -C target/x86_64-unknown-linux-musl/release ${{ env.EXE_NAME }}

      - uses: actions/upload-artifact@v4
        with:
          name: linux-x86_64-binary
          path: ${{ env.EXE_NAME }}-linux-x86_64-musl.tar.gz
          if-no-files-found: error

  publish-release:
    needs: [build-macos-aarch64, build-linux-x86_64-musl]
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: macos-aarch64-binary
          path: /tmp

      - uses: actions/download-artifact@v4
        with:
          name: linux-x86_64-binary
          path: /tmp

      - name: set version to version.current output variable
        id: version
        run: |
          tar xf /tmp/${{ env.EXE_NAME }}-linux-x86_64-musl.tar.gz
          echo "current=$(./${{ env.EXE_NAME }} --version | head -n 1 | sed -E 's/[^0-9]+(.*)/\1/')" >> $GITHUB_OUTPUT

      - name: set tag.value to tag for release
        id: tag
        run: echo "value=v${{ steps.version.outputs.current }}" >> $GITHUB_OUTPUT

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag.outputs.value }}
          commit: "main"
          name: "${{ steps.tag.outputs.value }}"
          artifacts: /tmp/${{ env.EXE_NAME }}*
          artifactErrorsFailBuild: true
          allow-updates: true
